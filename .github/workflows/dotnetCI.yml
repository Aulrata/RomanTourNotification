name: CI .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0' 

      - name: Run tests
        run: dotnet test

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.TOKEN_GITHUB }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t ghcr.io/aulrata/romantour-notification:latest .
          docker push ghcr.io/aulrata/romantour-notification:latest

      - name: Настройка SSH
        run: |
          mkdir -p $HOME/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > $HOME/.ssh/id_rsa
          chmod 600 $HOME/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> $HOME/.ssh/known_hosts
          
      - name: Деплой на сервер
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
            cd $HOME/romantour  # Папка с проектом
            docker compose pull  # Обновляем образы
            docker compose up -d --remove-orphans  # Перезапускаем контейнеры
            docker system prune -f  # Чистим ненужные образы
          EOF
